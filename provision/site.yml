---
- hosts: dockerhost
  vars:
    - http_proxy: "{{ lookup('env','http_proxy') }}"
    # Docker tools versions
    - docker_compose_version: 1.4.2
    - rocker_version: 0.2.2
    - rocker_compose_version: 0.1.1
    # Default values
    - use_proxy: no
    - tmp_dir: /tmp
    - opt_dir: /opt
    - ansible_cache_dir: "{{tmp_dir}}/ansible"
    - software_install_dir: "{{ tmp_dir }}"
    - user_binaries: "{{ opt_dir }}"
  #vars_files:
    #- vars/dependencies.yml
  roles:
    - base
    - role: libevent
    - role: boost
    - role: thrift
    - role: snappy
    - role: gflags
    - role: glog
    - role: protobuf
    - role: gperftools
    - role: re2
    - role: orion
  tasks:
    - name: Setup proxy for Ansible tasks
      set_fact:
        use_proxy: yes
      when: http_proxy != ""
    - debug: msg="System {{ inventory_hostname }} proxy={{ http_proxy }} use_proxy={{ use_proxy }}"
    - name: Create user
      user:
        name: "{{ user }}"
        shell: /bin/bash
        state: present
    - name: Setup system proxy
      template: src={{ basedir }}/templates/etc_profiled_proxy.j2 dest=/etc/profile.d/proxy.sh owner=root group=root mode=0644
      when: http_proxy != ""
    - name: Setup apt-get proxy
      template: src={{ basedir }}/templates/apt_proxy_settings.j2 dest=/etc/apt/apt.conf.d/80proxy owner=root group=root mode=0644
      when: ansible_os_family == "Debian" and http_proxy != ""
    - name: Install list of packages
      apt: pkg={{item}} state=installed
      with_items:
        - apt-transport-https
        - curl
        - wget
        - git
        - zip
        - unzip
        - tar
        - cmake
    - name: Check Docker installed
      stat: path=/usr/bin/docker
      register: docker_bin
    # - name: Create Docker apt repo file
    #   file: path=/etc/apt/sources.list.d/docker.list state=touch owner=root mode=0644
    # - name: Register Docker apt repo
    #   lineinfile: dest=/etc/apt/sources.list.d/docker.list line="deb https://apt.dockerproject.org/repo ubuntu-trusty main"
    - name: Add Docker repository
      apt_repository:
        repo: "deb https://apt.dockerproject.org/repo debian-jessie main"
        #  repo: "deb https://apt.dockerproject.org/repo ubuntu-trusty main"
        update_cache: no
        state: present
    - name: apt-get update
      apt: update_cache=yes
      when: docker_bin.stat.exists == False
    - name: Install Docker
      apt:
        pkg: docker-engine
        state: installed
        force: yes
      when: docker_bin.stat.exists == False
    - name: Setup Docker proxy
      lineinfile: dest=/etc/default/docker line="export http_proxy='{{ http_proxy }}'"
      when: http_proxy != "" and ansible_distribution_version|version_compare(15.04, '<')
    - name: Add user to docker group
      user:
        name: "{{ user }}"
        groups: docker
        append: yes
    - name: Restart Docker service
      service:
        name: docker
        state: restarted
    - name: Download docker-compose
      get_url:
        url: "https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-Linux-x86_64"
        dest: /usr/local/bin/docker-compose
        use_proxy: "{{ use_proxy }}"
        # see: https://github.com/ansible/ansible/issues/11579
        validate_certs: no
      environment:
        http_proxy: "{{ http_proxy }}"
        https_proxy: "{{ http_proxy }}"
    - name: chmod docker-compose executable
      file:
        path: /usr/local/bin/docker-compose
        mode: 0755
    - name: Download rocker
      get_url:
        url: "https://github.com/grammarly/rocker/releases/download/{{ rocker_version }}/rocker-{{ rocker_version }}_linux_amd64.tar.gz"
        dest: /tmp/rocker-{{ rocker_version }}_linux_amd64.tar.gz
        use_proxy: "{{ use_proxy }}"
        # see: https://github.com/ansible/ansible/issues/11579
        validate_certs: no
      environment:
        http_proxy: "{{ http_proxy }}"
        https_proxy: "{{ http_proxy }}"
    - name: Extract rocker
      unarchive:
        src: /tmp/rocker-{{ rocker_version }}_linux_amd64.tar.gz
        dest: /usr/local/bin
        copy: no
    - name: chmod rocker executable
      file:
        path: /usr/local/bin/rocker
        mode: 0755
    - name: Download rocker-compose
      get_url:
        url: "https://github.com/grammarly/rocker-compose/releases/download/{{ rocker_compose_version }}/rocker-compose-{{ rocker_compose_version }}_linux_amd64.tar.gz"
        dest: /tmp/rocker-compose-{{ rocker_compose_version }}_linux_amd64.tar.gz
        use_proxy: "{{ use_proxy }}"
        # see: https://github.com/ansible/ansible/issues/11579
        validate_certs: no
      environment:
        http_proxy: "{{ http_proxy }}"
        https_proxy: "{{ http_proxy }}"
    - name: Extract rocker-compose
      unarchive:
        src: /tmp/rocker-compose-{{ rocker_compose_version }}_linux_amd64.tar.gz
        dest: /usr/local/bin
        copy: no
    - name: chmod rocker-compose executable
      file:
        path: /usr/local/bin/rocker-compose
        mode: 0755
    #- include: tasks/libevent/main.yml
    #- include: tasks/boost/main.yml
    #- include: tasks/snappy/main.yml
    #  tags:
    #   - snappy
    #- include: tasks/gperftools/main.yml
    #  tags:
    #   - gperftools
    #- include: tasks/protobuf/main.yml
    #- include: tasks/re2/main.yml
    #- include: tasks/gflags/main.yml
    #- include: tasks/glog/main.yml
    #- include: tasks/thrift/main.yml
